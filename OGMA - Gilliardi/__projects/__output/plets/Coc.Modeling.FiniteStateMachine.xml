<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coc.Modeling.FiniteStateMachine</name>
    </assembly>
    <members>
        <member name="T:Coc.Modeling.FiniteStateMachine.FiniteStateMachine">
            <summary>
            Represents a finite state machine model.
            </summary>
        </member>
        <member name="F:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.EPSILON">
            <summary>
            EPSILON constant. Denotes empty sets.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.InputAlphabet">
            <summary>
            Input alphabet property.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.TaggedValues">
            <summary>
            Tag Finite State Machine.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.OutputAlphabet">
            <summary>
            Output alphabet property.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.States">
            <summary>
            States property.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.Name">
            <summary>
            Defines a name to the instance.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.InitialState">
            <summary>
            Initial State.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.Transitions">
            <summary>
            Transitions.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.WiSet">
            <summary>
            Set Wi.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.#ctor">
            <summary>
            Parameterless constructor. Used by serializer.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.AddTransition(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new transition to fsm transitions data.
            </summary>
            <param name="sourceStateId">Id of state from where the transition comes. That state must be inside fsm, otherwise a exception shall be thrown.</param>
            <param name="targetStateId">Id of state to where the transition goes. That state must be inside fsm, otherwise a exception shall be thrown.</param>
            <param name="inputData">Input data needed to walk throught the transition. That data will be added to input alphabet. If null, a exception shall be thrown.</param>
            <param name="outputData">Output data returned when walked throught the transition. That data will be added to output alphabet.If null, a exception shall be thrown. </param>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.AddInput(System.String)">
            <summary>
            Add a input data to input alphabet.
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.AddOutput(System.String)">
            <summary>
            Adds a output to output data.
            </summary>
            <param name="outputData"></param>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.AddState(Coc.Modeling.FiniteStateMachine.State)">
            <summary>
            Adds a state to the state machine. Make sure that the added state has one or more trasitions with it.
            </summary>
            <param name="state">A state reference. States are identified by their names - if the machine has a state with the same name the new state wont be added.</param>
            <returns>Returns true if the state were added to the state list. Returns false if the machine already has the state in the list.</returns>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.RefreshData">
            <summary>
            Cleans Input and Output dictionaries generating data from current transition list.
            USE WITH CARE.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.AddTransition(Coc.Modeling.FiniteStateMachine.Transition)">
            <summary>
            Adds a existing transition to the machine's transition list
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.FiniteStateMachine.ToString">
            <summary>
            ToString implementation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Coc.Modeling.FiniteStateMachine.State">
            <summary>
            Represents a finite state machine state model.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.State.#ctor">
            <summary>
            Parameterless constructor. Used by XmlSerializer.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.State.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.State.Id">
            <summary>
            Identifies the state on a fsm.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.State.Name">
            <summary>
            Name property.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.State.IsInitialState(Coc.Modeling.FiniteStateMachine.FiniteStateMachine)">
            <summary>
            Returns true if this state is the initial state of given finite state machine.
            </summary>
            <param name="fsm"></param>
            <returns></returns>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.State.CompareTo(System.Object)">
            <summary>
            Compare to implementation.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Coc.Modeling.FiniteStateMachine.Transition">
            <summary>
            Represents a transition into a fsm.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.SourceState">
            <summary>
            From where the transition comes.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.TargetState">
            <summary>
            To where the transitions goes.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.Input">
            <summary>
            Input property.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.Output">
            <summary>
            Output property.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.CycleTransition">
            <summary>
            Determines if this transition was part of a loop.
            </summary>
        </member>
        <member name="P:Coc.Modeling.FiniteStateMachine.Transition.EndCycle">
            <summary>
            Determines if this transition was the end of a loop.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.Transition.#ctor(Coc.Modeling.FiniteStateMachine.State,Coc.Modeling.FiniteStateMachine.State,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Coc.Modeling.FiniteStateMachine.Transition.CompareTo(System.Object)">
            <summary>
            CompareTo implementation.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
    </members>
</doc>
