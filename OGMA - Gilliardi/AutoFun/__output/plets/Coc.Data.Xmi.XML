<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coc.Data.Xmi</name>
    </assembly>
    <members>
        <member name="T:Coc.Data.Xmi.Script.Configuration">
            <summary>
            Esta classe e responsavel pelo gerenciamento das configuracoes da ferramenta.
            </summary>
        </member>
        <member name="T:Coc.Data.Xmi.Script.Configuration.Fields">
            <summary>
            Esta enumeracao guarda os nomes dos campos que deverao ser salvos/recuperados
            no arquivo de configuracao da ferramenta.
            </summary>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.init">
            <summary>
            Inicializa as configuracoes.
            </summary>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.readConfigFile">
            <summary>
            Realiza a leitura do arquivo de configuracao.
            </summary>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.isFieldName(System.String)">
            <summary>
            Verifica se a string passada por parametro e igual ao nome
            de algum campo de configuracao.
            </summary>
            <param name="fildName">Nome do campo que se quer verificar a existencia.</param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.writeConfigFile">
            <summary>
            Salva todas as configuracoes em um arquivo, retornando o status da operacao.
            </summary>
            <returns><code>true</code>, caso ocorra a escrita sem erros ou 
            <code>false</code> caso contrario.</returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.getConfiguration(Coc.Data.Xmi.Script.Configuration.Fields)">
            <summary>
            Realiza a recuperacao de uma configuracao, de acordo como o campo passado por parametro.
            </summary>
            <param name="field"></param>
            <returns>O valor da configuracao ou string vazia caso nao exista.</returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.Configuration.setConfiguration(Coc.Data.Xmi.Script.Configuration.Fields,System.String)">
            <summary>
            Altera o valor da configuracao passada por parametro.
            </summary>
            <param name="field">Campo que devera receber o novo valor.</param>
            <param name="configValue">Novo valor para a configuracao.</param>
        </member>
        <member name="T:Coc.Data.Xmi.Script.ScriptParser">
            <summary>
            Classe responsavel por construir o script com as tags que foram anotadas no modelo.
            </summary>
        </member>
        <member name="T:Coc.Data.Xmi.Script.ScriptParser.TagNames">
            <summary>
            Esta enumeracao contem o nome das tags presentes no modelo
            </summary>
        </member>
        <member name="T:Coc.Data.Xmi.Script.ScriptParser.Components">
            <summary>
            Esta enumeracao contem os nomes dos objetos que existem no script do OATS.
            </summary>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.#ctor(Coc.Data.Xmi.Script.TabHelper,Coc.Data.Xmi.Script.ScriptSequence)">
            <summary>
            Instancia um objeto ScriptParser informando o nivel de tabs e sequencia 
            do script que devem ser utilizados para a construcao do script.
            </summary>
            <param name="tabHelper">Objeto que ira auxiliar na identacao do codigo do script.</param>
            <param name="sequence">Objeto que ira informar e controlar 
            a sequencia das acoes e passos no script.</param>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.extractObject(System.String)">
            <summary>
            Extrai, do conteudo da tag passado por parametro, o objeto e seu respectivo nome.
            </summary>
            <param name="tagValue">Conteudo de uma tag.</param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.extractTransitionTags(Coc.Modeling.Uml.UmlTransition)">
            <summary>
            Extrai da transicao passada por parametro, todas as tags 
            que foram anotadas no modelo.
            </summary>
            <param name="transition">Transicao do diagrama de atividades no modelo.</param>
            <returns></returns>
        </member>
        <! -- ComentÃ¡rio XML mal formado ignorado para o membro "M:Coc.Data.Xmi.Script.ScriptParser.extractActionParameters(System.String)" -->
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.extractDataBanks(System.String)">
            <summary>
            Este metodo retorna uma lista contendo todos os databanks encontrados
            no valor da tag TDACTION.
            </summary>
            <param name="TDActionValue">Conteudo da tag TDACTION.</param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.buildAction(System.String,System.String[])">
            <summary>
            Este metodo realiza a construcao de um trecho do script 
            referente a acao a ser executada, que no caso sera a 
            chamada para algum metodo de um objeto qualquer. Utiliza o array de string
            para construir a lista de parametros que o metodo recebera como argumento. 
            </summary>
            <param name="action">Nome do metodo de um objeto que sera invocado no script.</param>
            <param name="actionParameters">array de string contendo os argumentos 
            que o metodo devera receber como parametro.</param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.buildObjScript(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Este metodo constroi o codigo que sera executado no script OATS.
            </summary>
            <param name="protocol">Protocolo do objeto(web, forms, applet).</param>
            <param name="obj">Tipo do objeto que ira executar a acao.</param>
            <param name="properties">Nome do arquivo properties que contem a biblioteda de objetos.</param>
            <param name="objectName">Nome do objeto que ira executar a acao.</param>
            <param name="action">Acao que devera ser executada pelo objeto.</param>
            <returns>Trecho de codigo referente aos parametros informados ou string vazia caso ocorra algum erro.</returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.buildStep(System.String)">
            <summary>
            
            </summary>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.buildDataBank(System.String)">
            <summary>
            Este metodo extrai o nome do arquivo contido no parametro de uma acao 
            para entao construir o script referente ao acesso do databank.
            </summary>
            <param name="actionParameter"></param>
            <returns>string contendo o script construido para acessar um databank 
            de acordo com o nome do arquivo presente no parametro da acao passada por parametro</returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.verifyObject(System.String)">
            <summary>
            Constroi um script para realizar a verificacao de existencia do objeto.
            </summary>
            <param name="objectScript"></param>
            <returns>script contendo a verificacao de existencia do objeto.</returns>
        </member>
        <member name="M:Coc.Data.Xmi.Script.ScriptParser.parse(Coc.Data.Xmi.Script.GroupNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="P:Coc.Data.Xmi.DatabankConfigForm.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Coc.Data.Xmi.DatabankConfigForm.Repository">
            <summary>
            
            </summary>
        </member>
        <member name="P:Coc.Data.Xmi.DatabankConfigForm.DatabankPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Coc.Data.Xmi.DatabankConfigForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Coc.Data.Xmi.DatabankConfigForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Coc.Data.Xmi.DatabankConfigForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
