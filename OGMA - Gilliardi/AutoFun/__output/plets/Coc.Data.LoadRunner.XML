<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coc.Data.LoadRunner</name>
    </assembly>
    <members>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ImageTreeViewItemCor.mm_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Magic method
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow">
            <summary>
            Interaction logic for ParameterEditorWindow.xaml
            </summary>
            <summary>
            ParameterEditorWindow
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.treeViewScenarios_SelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Update form with information got from ImageItemTreeView selected.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.buttonLoadDataFile_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Loads parameterization data from a *.dat file. 
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.loadDataFromDat(System.String)">
            <summary>
            Fills datagrid with values from DAT
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.RadioButton_Checked_3(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Display "Name" comboBox button when checked.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.RadioButton_Checked_4(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Displays "Index" comboBox button when checked.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.SetTestData(System.Collections.Generic.List{Coc.Data.LoadRunner.SequenceModel.Scenario})">
            <summary>
            Sets current List"Scenario" object. Used for script parameterization.
            </summary>
            <param name="scenarios">Object to be used.</param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.Window_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fill this.treeView with scenario list data.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.LoadInformationFrom(Coc.Data.LoadRunner.ParameterEditor.ScriptParameterizationData)">
            <summary>
            Fill form with information got from ScriptParameterization data
            </summary>
            <param name="data">ScriptParameterization to get information from</param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.writeAsText(System.IO.TextWriter,Coc.Data.LoadRunner.ParameterEditor.ScriptParameterizationData,System.String)">
            <summary>
            Generate PRM file use with given script (name).
            </summary>
            <param name="writer">textWriter to write to.</param>
            <param name="data">data to be written</param>
            <param name="itemName">script name</param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.buttonExportAll_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Write all available script parameters to selected folder as PRM files.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.buttonExport_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Export selected parameter to a PRM file.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.btnImportCor_Click(System.Object,System.Windows.RoutedEventArgs,Coc.Data.LoadRunner.ParameterEditor.ImageTreeViewItemCor)">
            <summary>
            Is a import correlation event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <param name="item"></param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.ExistRule(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Compare if exists a equal rule in grupe g and g2, used by btnImportCor_Click
            </summary>
            <param name="r"></param>
            <param name="r2"></param>
            <param name="ns"></param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.parseCorrelationParameters(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse the correlation file and create rules
            </summary>
            <param name="doc"></param>
            <param name="ns"></param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.loadCorrelationInformation(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Load informations about coorrelations and add (TextBlock format) in grid
            </summary>
            <param name="doc"></param>
            <param name="ns"></param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.ExistsRule(Coc.Data.LoadRunner.SequenceModel.Rule)">
            <summary>
            This method return true if treeViewParameters.itens contais a rule
            </summary>
            <param name="r">Is a Rule</param>
            <returns>True if exist and false if not exist</returns>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.ExistsRule(System.String)">
            <summary>
            This method return true if treeViewParameters.itens contais a rule
            </summary>
            <param name="r">Rule name</param>
            <returns>True if exist and false if not exist</returns>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.buttonSaveChanges_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This is a save button event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.PopuleteRulesValues">
            <summary>
            Populate ImageTreeViewItemCor with respectives values, according to the treeViewParameters
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.validateValues">
            <summary>
            Validate if rules in the tree has valid atributes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.LoadRunner.ParameterEditor.ParameterEditorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.ScenarioLR.GenerateScenario(Coc.Testing.Performance.AbstractTestCases.Scenario,System.String,System.String)">
            <summary>
            Generates a LoadRunner scenario (.lrs file) from a Scenario object.
            </summary>
            <param name="scenario">Scenario object from the Sequence Model</param>
        </member>
        <member name="M:Coc.Data.LoadRunner.ScriptLR.GenerateScript(Coc.Testing.Performance.AbstractTestCases.TestCase,System.String,System.String,Coc.Testing.Performance.AbstractTestCases.SaveParameter)">
            <summary>
            Generates a LoadRunner script from a TestCase object.
            </summary>
            <param name="testCase">TestCase object</param>
            <param name="destinationPath">Destination path (folder) to the generated script</param>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Counter">
            <summary>
            Class that represents a generic Counter
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Counter.Name">
            <summary>
            Counter name.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Counter.Thresholds">
            <summary>
            Thresholds. Expected SLA value.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Host">
            <summary>
            Class that represents a generic Host
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Host.HostType">
            <summary>
            HostType
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Host.Type">
            <summary>
            Host type.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Host.Name">
            <summary>
            Host name (or IP adress).
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Host.Monitoring">
            <summary>
            Monitoring.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Host.Counters">
            <summary>
            Counter list.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Metric">
            <summary>
            Class that represents a generic Metric
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Metric.Counters">
            <summary>
            Counter list.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Metric.OperationalSystem">
            <summary>
            Operational system enum list
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Metric.OS">
            <summary>
            OS.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Metric.Name">
            <summary>
            Metric name.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Parameter">
            <summary>
            Class that represents a generic Parameter
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Parameter.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Parameter.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Request">
            <summary>
            Class that represents a generic Request
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Request.Name">
            <summary>
            Indexes this Request. Names are unique - Request with the same name are the same Request.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.SequenceModel.Request.Equals(System.Object)">
            <summary>
            Returns true if this Request has the same name of given Request. 
            Names diagram as unique identifier each for Request objects.
            </summary>
        </member>
        <member name="M:Coc.Data.LoadRunner.SequenceModel.Request.GetHashCode">
            <summary>
            Overrides base method for prevent warnings.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Scenario">
            <summary>
            Class that represents a generic Scenario
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.Population">
            <summary>
            Number of users.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.ExecutionTime">
            <summary>
            Scenario execution time.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.ThinkTime">
            <summary>
            Global think time used in all transactions whitin the scenario.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.WarmUpTime">
            <summary>
            Scenario warmup time.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.TestCases">
            <summary>
            Test Cases list.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.RampUpTime">
            <summary>
            RampUp time. (as seconds)
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.RampUpUser">
            <summary>
            Ramp up number of users.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.RampDownTime">
            <summary>
            RampDown time. (as seconds)
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.RampDownUser">
            <summary>
            Ramp down number of users.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.AdditionalHosts">
            <summary>
            Adicional Host list.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.HostSUT">
            <summary>
            Host sut.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Scenario.Name">
            <summary>
            Host sut.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Subtransaction.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Subtransaction.Begin">
            <summary>
            Begin trans.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Subtransaction.End">
            <summary>
            End trans.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.TestCase">
            <summary>
            Class that represents a generic TestCase
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.TestCase.Probability">
            <summary>
            Test Case Propability.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.TestCase.Name">
            <summary>
            Test case name;
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.TestCase.Requests">
            <summary>
            Request list.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.TestCase.Transactions">
            <summary>
            Transactions.
            </summary>
        </member>
        <member name="T:Coc.Data.LoadRunner.SequenceModel.Transaction">
            <summary>
            Class that represents a generic Transaction
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Transaction.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Transaction.Begin">
            <summary>
            Begin trans.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Transaction.End">
            <summary>
            End trans.
            </summary>
        </member>
        <member name="P:Coc.Data.LoadRunner.SequenceModel.Transaction.Subtransactions">
            <summary>
            Subtransactions.
            </summary>
        </member>
    </members>
</doc>
