<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Coc.Data.ConversionUnit</name>
    </assembly>
    <members>
        <member name="M:Coc.Data.ConversionUnit.TesteMachineFinite.Negocio.ConvertToFSM.FullySpecified(Coc.Modeling.FiniteStateMachine.FiniteStateMachine)">
            <summary>
            Caso a máquina(FSM) Não estejas totalmente especificado
            este método faz que a mpaquina fique totalemte especificado.
            </summary>
            <param name="fsm"></param>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraphOATS.ActivityDiagramToGraph(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.Uml.UmlModel)">
            <summary>
            Converts an activity diagram to a finite state machine.
            </summary>
            <param name="diagram">Diagram to be converted</param>
            <param name="model">Parent model of diagram, used to get sub-diagrams</param>
            <returns>a FSM of diagram</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraphOATS.GetTransitionsOfDiagram(Coc.Modeling.Uml.UmlModel,Coc.Modeling.Uml.UmlTransition@,Coc.Data.ConversionUnit.UmlToGraphOATS.hyperLinkType)">
            <summary>
            Get all transitions of the desired diagram adjusting the initial and final insertion points using <paramref name="t"/>
            </summary>
            <param name="model">The model where the diagram is</param>
            <param name="t">the transation with hyperlink</param>
            <param name="tp">the side where the hyperlink is (source or target)</param>
            <returns>a list of the transitions</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraphOATS.RemoveDecisions(Coc.Modeling.Uml.UmlActivityDiagram@,System.Collections.Generic.List{Coc.Modeling.Uml.UmlTransition}@)">
            <summary>
            Remove decisions/merge nodes of diagram
            </summary>
            <param name="diagram">targeted diagram to remove decision/merge nodes from</param>
            <param name="transitions">transitions to be searched and replaced</param>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraphOATS.WipeOutOutermost(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.Graph.DirectedGraph)">
            <summary>
            Wipe out of the given FSM the outermost states of it, i.e. UmlInitialState and UmlFinalState
            </summary>
            <param name="diagram">Uml diagram of the given FSM</param>
            <param name="graph">graph to clean</param>
            <returns>cleaned FSM</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.TransformToFsm(Coc.Modeling.Uml.UmlModel)">
            <summary>
            Converts given model to an array of FiniteStateMachine.
            </summary>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.ActivityDiagramToFsm(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.Uml.UmlModel)">
            <summary>
            Converts an activity diagram to a finite state machine.
            </summary>
            <param name="diagram">Diagram to be converted</param>
            <param name="model">Parent model of diagram, used to get sub-diagrams</param>
            <returns>a FSM of diagram</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.GetTransitionsOfDiagram(Coc.Modeling.Uml.UmlModel,Coc.Modeling.Uml.UmlTransition@,Coc.Data.ConversionUnit.UmlToFsm.hyperLinkType)">
            <summary>
            Get all transitions of the desired diagram adjusting the initial and final insertion points using <paramref name="t"/>
            </summary>
            <param name="model">The model where the diagram is</param>
            <param name="t">the transation with hyperlink</param>
            <param name="tp">the side where the hyperlink is (source or target)</param>
            <returns>a list of the transitions</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.GetFsmInitialState(Coc.Modeling.FiniteStateMachine.FiniteStateMachine)">
            <summary>
            Get initial state of FSM
            </summary>
            <param name="fsm"></param>
            <returns></returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.RemoveDecisions(Coc.Modeling.Uml.UmlActivityDiagram@,System.Collections.Generic.List{Coc.Modeling.Uml.UmlTransition}@)">
            <summary>
            Remove decisions/merge nodes of diagram
            </summary>
            <param name="diagram">targeted diagram to remove decision/merge nodes from</param>
            <param name="transitions">transitions to be searched and replaced</param>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.RemoveForks(Coc.Modeling.Uml.UmlActivityDiagram@,System.Collections.Generic.List{Coc.Modeling.Uml.UmlTransition}@)">
            <summary>
            Remove forks and joins of diagram
            </summary>
            <param name="diagram">targeted diagram to remove fork/join nodes from</param>
            <param name="transitions">transitions to be searched and replaced</param>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToFsm.WipeOutOutermost(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.FiniteStateMachine.FiniteStateMachine)">
            <summary>
            Wipe out of the given FSM the outermost states of it, i.e. UmlInitialState and UmlFinalState
            </summary>
            <param name="diagram">Uml diagram of the given FSM</param>
            <param name="fsm">FSM to clean</param>
            <returns>cleaned FSM</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraph.ActivityDiagramToGraph(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.Uml.UmlModel)">
            <summary>
            Converts an activity diagram to a finite state machine.
            </summary>
            <param name="diagram">Diagram to be converted</param>
            <param name="model">Parent model of diagram, used to get sub-diagrams</param>
            <returns>a FSM of diagram</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraph.GetTransitionsOfDiagram(Coc.Modeling.Uml.UmlModel,Coc.Modeling.Uml.UmlTransition@,Coc.Data.ConversionUnit.UmlToGraph.hyperLinkType)">
            <summary>
            Get all transitions of the desired diagram adjusting the initial and final insertion points using <paramref name="t"/>
            </summary>
            <param name="model">The model where the diagram is</param>
            <param name="t">the transation with hyperlink</param>
            <param name="tp">the side where the hyperlink is (source or target)</param>
            <returns>a list of the transitions</returns>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraph.RemoveDecisions(Coc.Modeling.Uml.UmlActivityDiagram@,System.Collections.Generic.List{Coc.Modeling.Uml.UmlTransition}@)">
            <summary>
            Remove decisions/merge nodes of diagram
            </summary>
            <param name="diagram">targeted diagram to remove decision/merge nodes from</param>
            <param name="transitions">transitions to be searched and replaced</param>
        </member>
        <member name="M:Coc.Data.ConversionUnit.UmlToGraph.WipeOutOutermost(Coc.Modeling.Uml.UmlActivityDiagram,Coc.Modeling.Graph.DirectedGraph)">
            <summary>
            Wipe out of the given FSM the outermost states of it, i.e. UmlInitialState and UmlFinalState
            </summary>
            <param name="diagram">Uml diagram of the given FSM</param>
            <param name="graph">graph to clean</param>
            <returns>cleaned FSM</returns>
        </member>
    </members>
</doc>
